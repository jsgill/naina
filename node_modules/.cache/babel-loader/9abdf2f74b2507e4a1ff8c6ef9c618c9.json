{"ast":null,"code":"var _jsxFileName = \"/Users/jangsher/Documents/GitHub/tables/mytable/src/Box.js\";\nimport React from \"react\";\nconst Game = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  marginLeft: \"40%\",\n  marginTop: \"10%\"\n};\nconst squareGame = {\n  background: \"#a93f5c\",\n  border: \"1px solid black\",\n  float: \"left\",\n  fontSize: \"50px\",\n  fontWeight: \"bold\",\n  lineHeight: \"34px\",\n  height: \"90px\",\n  margin: \"4px\",\n  padding: \"10px\",\n  textAlign: \"center\",\n  width: \"90px\",\n  color: \"#fff\"\n};\n\nfunction Square(props) {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    style: squareGame,\n    onClick: props.onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, props.value);\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.myChangeHandler = event => {\n      let nam = event.target.name;\n      let val = event.target.value;\n      this.setState({\n        [nam]: val\n      });\n    };\n\n    this.state = {\n      squares: Array(9).fill(null),\n      xIsNext: null,\n      player1: \"\",\n      player2: \"\"\n    };\n  }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n\n    if (calculaterWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? \"x\" : \"o\";\n    this.setState({\n      squares: squares,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  rendersquare(i) {\n    return /*#__PURE__*/React.createElement(Square, {\n      value: this.state.squares[i],\n      onClick: () => this.handleClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    });\n  }\n\n  /*\n  render() {\n    const status =\n      \"Next Player is \" +\n      (this.state.xIsNext\n        ? this.state.player1 + \"  X\"\n        : this.state.player2 + \"  O\");*/\n  //render\n  render() {\n    const Winner = calculaterWinner(this.state.squares);\n    let status;\n\n    if (Winner) {\n      status = \"Winner :\" + (this.state.xIsNext ? this.state.player1 + \"   \" : this.state.player2 + \"   \") + Winner;\n    } else {\n      status = \"Next Player:\" + (this.state.xIsNext ? this.state.player1 + \"- X\" : this.state.player2 + \"- O\");\n    } //return\n\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, \"Player1: \", this.state.player1), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"player1\",\n      onChange: this.myChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, \"Player2: \", this.state.player2), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"player2\",\n      onChange: this.myChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, status), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"border-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, this.rendersquare(0), this.rendersquare(1), this.rendersquare(2)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"border-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }, this.rendersquare(3), this.rendersquare(4), this.rendersquare(5)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"border-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }, this.rendersquare(6), this.rendersquare(7), this.rendersquare(8)));\n  }\n\n}\n\nclass Box extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      style: Game,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Board, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n} //Funciton calculaterWinner start\n\n\nfunction calculaterWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n} //Funciton calculaterWinner End\n\n/*\nfunction calculaterWinner() {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    return null;\n\n  }\n}\n*/\n\n\nexport default Box;","map":{"version":3,"sources":["/Users/jangsher/Documents/GitHub/tables/mytable/src/Box.js"],"names":["React","Game","display","flexDirection","marginLeft","marginTop","squareGame","background","border","float","fontSize","fontWeight","lineHeight","height","margin","padding","textAlign","width","color","Square","props","onClick","value","Board","Component","constructor","myChangeHandler","event","nam","target","name","val","setState","state","squares","Array","fill","xIsNext","player1","player2","handleClick","i","slice","calculaterWinner","rendersquare","render","Winner","status","Box","lines","length","a","b","c"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nconst Game = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  marginLeft: \"40%\",\n  marginTop: \"10%\",\n};\n\nconst squareGame = {\n  background: \"#a93f5c\",\n  border: \"1px solid black\",\n  float: \"left\",\n  fontSize: \"50px\",\n  fontWeight: \"bold\",\n  lineHeight: \"34px\",\n  height: \"90px\",\n  margin: \"4px\",\n  padding: \"10px\",\n  textAlign: \"center\",\n  width: \"90px\",\n  color: \"#fff\",\n};\n\nfunction Square(props) {\n  return (\n    <button style={squareGame} onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      xIsNext: null,\n      player1: \"\",\n      player2: \"\",\n    };\n  }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n    if (calculaterWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? \"x\" : \"o\";\n    this.setState({\n      squares: squares,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  rendersquare(i) {\n    return (\n      <Square\n        value={this.state.squares[i]}\n        onClick={() => this.handleClick(i)}\n      />\n    );\n  }\n  myChangeHandler = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value;\n    this.setState({ [nam]: val });\n  };\n  /*\n  render() {\n    const status =\n      \"Next Player is \" +\n      (this.state.xIsNext\n        ? this.state.player1 + \"  X\"\n        : this.state.player2 + \"  O\");*/\n  //render\n  render() {\n    const Winner = calculaterWinner(this.state.squares);\n    let status;\n    if (Winner) {\n      status =\n        \"Winner :\" +\n        (this.state.xIsNext\n          ? this.state.player1 + \"   \"\n          : this.state.player2 + \"   \") +\n        Winner;\n    } else {\n      status =\n        \"Next Player:\" +\n        (this.state.xIsNext\n          ? this.state.player1 + \"- X\"\n          : this.state.player2 + \"- O\");\n    }\n\n    //return\n\n    return (\n      <>\n        <form>\n          <p>Player1: {this.state.player1}</p>\n          <input type=\"text\" name=\"player1\" onChange={this.myChangeHandler} />\n\n          <p>Player2: {this.state.player2}</p>\n          <input type=\"text\" name=\"player2\" onChange={this.myChangeHandler} />\n        </form>\n        <div>{status}</div>\n        <div className=\"border-row\">\n          {this.rendersquare(0)}\n          {this.rendersquare(1)}\n          {this.rendersquare(2)}\n        </div>\n        <div className=\"border-row\">\n          {this.rendersquare(3)}\n          {this.rendersquare(4)}\n          {this.rendersquare(5)}\n        </div>\n        <div className=\"border-row\">\n          {this.rendersquare(6)}\n          {this.rendersquare(7)}\n          {this.rendersquare(8)}\n        </div>\n      </>\n    );\n  }\n}\n\nclass Box extends React.Component {\n  render() {\n    return (\n      <>\n        <div style={Game}>\n          <div>\n            <Board />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\n//Funciton calculaterWinner start\nfunction calculaterWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\n//Funciton calculaterWinner End\n/*\nfunction calculaterWinner() {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    return null;\n\n  }\n}\n*/\n\nexport default Box;\n"]},"metadata":{},"sourceType":"module"}