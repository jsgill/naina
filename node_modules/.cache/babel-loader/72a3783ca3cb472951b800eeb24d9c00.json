{"ast":null,"code":"var _jsxFileName = \"/Users/jangsher/Documents/GitHub/tables/mytable/src/tictac.js\";\nimport React from \"react\";\nimport Game from \"./components/Game\";\n\nconst Tic = () => /*#__PURE__*/React.createElement(Game, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 19\n  }\n});\n/*const Square = (props) => (\n  <button onClick={props.onClick}>{props.value}</button>\n);*/\n\n\n/*#__PURE__*/\nReact.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(Square, {\n  value: \"1\",\n  onClick: () => onClick(\"dummy value\"),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }\n}), /*#__PURE__*/React.createElement(Square, {\n  value: \"2\",\n  onClick: () => onClick(\"dummy value\"),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }\n}), /*#__PURE__*/React.createElement(Square, {\n  value: \"3\",\n  onClick: () => onClick(\"dummy value\"),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }\n}), /*#__PURE__*/React.createElement(Square, {\n  value: \"4\",\n  onClick: () => onClick(\"dummy value\"),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }\n}), /*#__PURE__*/React.createElement(Square, {\n  value: \"5\",\n  onClick: () => onClick(\"dummy value\"),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }\n}), /*#__PURE__*/React.createElement(Square, {\n  value: \"6\",\n  onClick: () => onClick(\"dummy value\"),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 3\n  }\n}), /*#__PURE__*/React.createElement(Square, {\n  value: \"7\",\n  onClick: () => onClick(\"dummy value\"),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 3\n  }\n}), /*#__PURE__*/React.createElement(Square, {\n  value: \"8\",\n  onClick: () => onClick(\"dummy value\"),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 3\n  }\n}), /*#__PURE__*/React.createElement(Square, {\n  value: \"9\",\n  onClick: () => onClick(\"dummy value\"),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }\n}));\n/*const style = {\n  background: \"lightblue\",\n  border: \"2px solid darkblue\",\n  fontSize: \"30px\",\n  fontWeight: \"800\",\n  cursor: \"pointer\",\n  outline: \"none\",\n};*/\n\nconst Square = ({\n  value,\n  onClick\n}) => /*#__PURE__*/React.createElement(\"button\", {\n  style: style,\n  onClick: onClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }\n}, value);\n\nconst style = {\n  border: \"4px solid darkblue\",\n  borderRadius: \"10px\",\n  width: \"250px\",\n  height: \"250px\",\n  margin: \"0 auto\",\n  display: \"grid\",\n  gridTemplate: \"repeat(3, 1fr) / repeat(3, 1fr)\"\n};\nexport function calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\nconst [board, setBoard] = useState(Array(9).fill(null));\nconst [xIsNext, setXisNext] = useState(true);\nconst winner = calculateWinner(board);\n\nconst Board = ({\n  squares,\n  onClick\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  style: style,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 3\n  }\n}, squares.map((square, i) => /*#__PURE__*/React.createElement(Square, {\n  key: i,\n  value: square,\n  onClick: () => onClick(i),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 7\n  }\n})));\n\nconst handleClick = i => {\n  const boardCopy = [...board]; // If user click an occupied square or if game is won, return\n\n  if (winner || boardCopy[i]) return; // Put an X or an O in the clicked square\n\n  boardCopy[i] = xIsNext ? \"X\" : \"O\";\n  setBoard(boardCopy);\n  setXisNext(!xIsNext);\n};\n\n/*#__PURE__*/\nReact.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Board, {\n  squares: board,\n  onClick: handleClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 3\n  }\n}), /*#__PURE__*/React.createElement(\"div\", {\n  style: styles,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }\n}, winner ? \"Winner: \" + winner : \"Next Player: \" + (xIsNext ? \"X\" : \"O\"))));\nexport default Tic;","map":{"version":3,"sources":["/Users/jangsher/Documents/GitHub/tables/mytable/src/tictac.js"],"names":["React","Game","Tic","onClick","Square","value","style","border","borderRadius","width","height","margin","display","gridTemplate","calculateWinner","squares","lines","i","length","a","b","c","board","setBoard","useState","Array","fill","xIsNext","setXisNext","winner","Board","map","square","handleClick","boardCopy","styles"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Game from \"./components/Game\";\n\nconst Tic = () => <Game />;\n/*const Square = (props) => (\n  <button onClick={props.onClick}>{props.value}</button>\n);*/\n<div>\n  <Square value=\"1\" onClick={() => onClick(\"dummy value\")} />\n  <Square value=\"2\" onClick={() => onClick(\"dummy value\")} />\n  <Square value=\"3\" onClick={() => onClick(\"dummy value\")} />\n  <Square value=\"4\" onClick={() => onClick(\"dummy value\")} />\n  <Square value=\"5\" onClick={() => onClick(\"dummy value\")} />\n  <Square value=\"6\" onClick={() => onClick(\"dummy value\")} />\n  <Square value=\"7\" onClick={() => onClick(\"dummy value\")} />\n  <Square value=\"8\" onClick={() => onClick(\"dummy value\")} />\n  <Square value=\"9\" onClick={() => onClick(\"dummy value\")} />\n</div>;\n/*const style = {\n  background: \"lightblue\",\n  border: \"2px solid darkblue\",\n  fontSize: \"30px\",\n  fontWeight: \"800\",\n  cursor: \"pointer\",\n  outline: \"none\",\n};*/\n\nconst Square = ({ value, onClick }) => (\n  <button style={style} onClick={onClick}>\n    {value}\n  </button>\n);\nconst style = {\n  border: \"4px solid darkblue\",\n  borderRadius: \"10px\",\n  width: \"250px\",\n  height: \"250px\",\n  margin: \"0 auto\",\n  display: \"grid\",\n  gridTemplate: \"repeat(3, 1fr) / repeat(3, 1fr)\",\n};\n\nexport function calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\nconst [board, setBoard] = useState(Array(9).fill(null));\nconst [xIsNext, setXisNext] = useState(true);\nconst winner = calculateWinner(board);\n\nconst Board = ({ squares, onClick }) => (\n  <div style={style}>\n    {squares.map((square, i) => (\n      <Square key={i} value={square} onClick={() => onClick(i)} />\n    ))}\n  </div>\n);\nconst handleClick = (i) => {\n  const boardCopy = [...board];\n  // If user click an occupied square or if game is won, return\n  if (winner || boardCopy[i]) return;\n  // Put an X or an O in the clicked square\n  boardCopy[i] = xIsNext ? \"X\" : \"O\";\n  setBoard(boardCopy);\n  setXisNext(!xIsNext);\n};\n\n<>\n  <Board squares={board} onClick={handleClick} />\n  <div style={styles}>\n    <p>\n      {winner ? \"Winner: \" + winner : \"Next Player: \" + (xIsNext ? \"X\" : \"O\")}\n    </p>\n  </div>\n</>;\nexport default Tic;\n"]},"metadata":{},"sourceType":"module"}