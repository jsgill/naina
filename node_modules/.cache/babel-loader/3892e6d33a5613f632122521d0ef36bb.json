{"ast":null,"code":"var _jsxFileName = \"/Users/jangsher/Documents/GitHub/tables/mytable/src/components/Game.js\";\nimport React from \"react\";\nimport Board from \"./Board\";\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      xIsNext: true,\n      stepNumber: 0,\n      histry: [{\n        squares: Array(9).fill(null)\n      }]\n    };\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  hendleClick(i) {\n    const histry = this.state.histry.slice(0, this.state.stepNumber + 1);\n    const current = histry[histry.length - 1];\n    const squares = current.squares.slice();\n    const winner = calculateWinner(squares);\n\n    if (winner || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    this.setState({\n      histry: histry.concat({\n        squares: squares\n      }),\n      xIsNext: !this.state.xIsNext,\n      stepNumber: histry.length\n    });\n  }\n\n  render() {\n    const histry = this.state.histry;\n    const current = histry[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const move = histry.map((step, move) => {\n      const desc = move ? \"Go to #\" + move : \"Start the Game\";\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: move,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => {\n          this.jumpTo(move);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, desc));\n    });\n    let status;\n\n    if (winner) {\n      status = \"Winner is \" + winner;\n    } else {\n      status = \"Next Player is \" + (this.state.xIsNext ? \"x\" : \"O\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Board, {\n      onClick: i => this.hendleClick(i),\n      squares: current.squares,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, status), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, move)));\n  }\n\n}\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[b] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/jangsher/Documents/GitHub/tables/mytable/src/components/Game.js"],"names":["React","Board","Game","Component","constructor","props","state","xIsNext","stepNumber","histry","squares","Array","fill","jumpTo","step","setState","hendleClick","i","slice","current","length","winner","calculateWinner","concat","render","move","map","desc","status","lines","a","b","c"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Board from \"./Board\";\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      xIsNext: true,\n      stepNumber: 0,\n      histry: [{ squares: Array(9).fill(null) }],\n    };\n  }\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0,\n    });\n  }\n\n  hendleClick(i) {\n    const histry = this.state.histry.slice(0, this.state.stepNumber + 1);\n    const current = histry[histry.length - 1];\n    const squares = current.squares.slice();\n    const winner = calculateWinner(squares);\n    if (winner || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    this.setState({\n      histry: histry.concat({\n        squares: squares,\n      }),\n      xIsNext: !this.state.xIsNext,\n      stepNumber: histry.length,\n    });\n  }\n\n  render() {\n    const histry = this.state.histry;\n    const current = histry[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const move = histry.map((step, move) => {\n      const desc = move ? \"Go to #\" + move : \"Start the Game\";\n      return (\n        <li key={move}>\n          <button\n            onClick={() => {\n              this.jumpTo(move);\n            }}\n          >\n            {desc}\n          </button>\n        </li>\n      );\n    });\n\n    let status;\n    if (winner) {\n      status = \"Winner is \" + winner;\n    } else {\n      status = \"Next Player is \" + (this.state.xIsNext ? \"x\" : \"O\");\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            onClick={(i) => this.hendleClick(i)}\n            squares={current.squares}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div className=\"status\">{status}</div>\n          <ul>{move}</ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[b] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}